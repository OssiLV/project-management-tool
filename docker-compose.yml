services:
    db:
        image: mariadb:10.6
        restart: always
        environment:
            # Common env
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            # Auth env
            AUTH_DATABASE: ${AUTH_DATABASE}
            AUTH_USER: ${AUTH_USER}
            AUTH_PASSWORD: ${AUTH_PASSWORD}
            # Project env
            PROJECT_DATABASE: ${PROJECT_DATABASE}
            PROJECT_USER: ${PROJECT_USER}
            PROJECT_PASSWORD: ${PROJECT_PASSWORD}
            # Board env
            BOARD_DATABASE: ${BOARD_DATABASE}
            BOARD_USER: ${BOARD_USER}
            BOARD_PASSWORD: ${BOARD_PASSWORD}
            # Comment env
            COMMENT_DATABASE: ${COMMENT_DATABASE}
            COMMENT_USER: ${COMMENT_USER}
            COMMENT_PASSWORD: ${COMMENT_PASSWORD}
        ports:
            - "3306:3306" # For debug
        volumes:
            - db_data:/var/lib/mysql
            - ./infrastructure/db:/docker-entrypoint-initdb.d
        networks:
            - backend
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            timeout: 5s
            retries: 5

    auth_service:
        build: ./services/auth
        restart: always
        depends_on:
            - db
        environment:
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_PORT: ${MYSQL_PORT}
            MYSQL_USER: ${AUTH_USER}
            MYSQL_PASSWORD: ${AUTH_PASSWORD}
            MYSQL_DATABASE: ${AUTH_DATABASE}
            JWT_SECRET: ${JWT_SECRET}
        volumes:
            - ./services/auth/migrations:/app/migrations
            - ./services/auth/src:/app/src
            - ./services/auth/tests:/app/tests
        networks:
            - backend
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    'python -c ''import urllib.request; urllib.request.urlopen("http://localhost:8000/docs")'' || exit 1',
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    project_service:
        build: ./services/project
        restart: always
        depends_on:
            - db
            - auth_service
        environment:
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_PORT: ${MYSQL_PORT}
            MYSQL_USER: ${PROJECT_USER}
            MYSQL_PASSWORD: ${PROJECT_PASSWORD}
            MYSQL_DATABASE: ${PROJECT_DATABASE}
            JWT_SECRET: ${JWT_SECRET}
        volumes:
            - ./services/project/migrations:/app/migrations
            - ./services/project/src:/app/src
            - ./services/project/tests:/app/tests
        networks:
            - backend
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    'python -c ''import urllib.request; urllib.request.urlopen("http://localhost:8000/docs")'' || exit 1',
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    board_service:
        build: ./services/board
        restart: always
        depends_on:
            - db
            - auth_service
            - project_service # To check role
        environment:
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_PORT: ${MYSQL_PORT}
            MYSQL_USER: ${BOARD_USER}
            MYSQL_PASSWORD: ${BOARD_PASSWORD}
            MYSQL_DATABASE: ${BOARD_DATABASE}
            JWT_SECRET: ${JWT_SECRET}
        volumes:
            - ./services/board/migrations:/app/migrations
            - ./services/board/src:/app/src
            - ./services/board/tests:/app/tests
        networks:
            - backend
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    'python -c ''import urllib.request; urllib.request.urlopen("http://localhost:8000/docs")'' || exit 1',
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    comment_service:
        build: ./services/comment
        restart: always
        depends_on:
            - db
            - auth_service
            - board_service # To check task
        environment:
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_PORT: ${MYSQL_PORT}
            MYSQL_USER: ${COMMENT_USER}
            MYSQL_PASSWORD: ${COMMENT_PASSWORD}
            MYSQL_DATABASE: ${COMMENT_DATABASE}
            JWT_SECRET: ${JWT_SECRET}
        volumes:
            - ./services/comment/migrations:/app/migrations
            - ./services/comment/src:/app/src
            - ./services/comment/tests:/app/tests
        networks:
            - backend
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    'python -c ''import urllib.request; urllib.request.urlopen("http://localhost:8000/docs")'' || exit 1',
                ]
            interval: 10s
            timeout: 5s
            retries: 5

    api_gateway:
        image: nginx:latest
        restart: always
        ports:
            - "${API_GATEWAY_PORT}:80" # Expose port to host (default user access via localhost:8080)
        volumes:
            - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Mount file config NGINX
        depends_on:
            - auth_service
            - project_service
            - board_service
            - comment_service
        networks:
            - backend

volumes:
    db_data:

networks:
    backend:
        driver: bridge
    # Coming soon...
    # frontend:
    #     driver: bridge
